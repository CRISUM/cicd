name: CI

on:
  push:
    branches:
      - 'v\d+.\d+'  # matches v<digit>.<digit>

jobs:
  build:
    name: CI_CD_Pipeline
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      id: CheckCode
      uses: actions/checkout@v3

    - name: Run Trivy vulnerability scanner in repo mode
      id: ScanCode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'table'
        output: 'trivy-results.txt'
        severity: 'HIGH,CRITICAL'
        
    - name: Post to a Slack channel via a proxy
      id: slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        channel-id: 'C062UQF9HFB'
        slack-message: 'This message was sent through a proxy'
        slack-file-path: 'trivy-result.txt'
      env:
        SLACK_BOT_TOKEN: ${{ secrets.CICD_G6_BOTTOKEN }}
        # Set the HTTPS_PROXY environment variable to whatever your policy requires
        HTTPS_PROXY: ${{ secrets.CICD_G6_WEBHOOK }}

    # - name: Send custom JSON data to Slack workflow
    #   id: slack
    #   uses: slackapi/slack-github-action@v1.24.0
    #   with:
    #     payload-file-path: "./payload.json"
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.CICD_TEST_WEBHOOK }}

    # - name: Run Trivy vulnerability scanner
    #   id: ScanVulnerability
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     scan-type: 'fs'
    #     input: '.'
    #     format: 'table'
    #     exit-code: '1'
    #     ignore-unfixed: 'false'
    #     output: 'trivy-report.txt'
    #     severity: 'CRITICAL,HIGH'

    # - name: Post to a Slack channel via a proxy
    #   id: slack
    #   uses: slackapi/slack-github-action@v1.24.0
    #   with:
    #     payload-file-path: "./payload.json"
    #     slack-message: 'This message was sent through a proxy'
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.CICD_TEST_WEBHOOK }}
    #     SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

